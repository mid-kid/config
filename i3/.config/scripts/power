#!/bin/sh
set -e

call_ck() {
    dbus-send --print-reply=literal --system \
        --dest=org.freedesktop.ConsoleKit \
        /org/freedesktop/ConsoleKit/Manager \
        "org.freedesktop.ConsoleKit.Manager.$@" 2> /dev/null
}

call_logind() {
    dbus-send --print-reply=literal --system \
        --dest=org.freedesktop.login1 \
        /org/freedesktop/login1 \
        "org.freedesktop.login1.Manager.$@" 2> /dev/null
}

get_seat() {
    # Currently only supports (e)logind
    call_logind GetSeat string:self | sed -e 's@^.*/seat/seat@@'
}

call_dm() {
    dbus-send --print-reply=literal --system \
        --dest=org.freedesktop.DisplayManager \
        "/org/freedesktop/DisplayManager/Seat$(get_seat)" \
        "org.freedesktop.DisplayManager.Seat.$@" 2> /dev/null
}

call_pm() {
    dbus-send --print-reply=literal --session \
        --dest=org.freedesktop.PowerManagement \
        /org/freedesktop/PowerManagement \
        "org.freedesktop.PowerManagement.$@" 2> /dev/null
}

call() {
    # Try calling xfce4-powermanager or anything like it before trying consolekit2 directly
    # Also added (e)logind support now CK2 is more than deprecated.
    if ! call_pm "$@"; then
        case "$1" in
            Suspend) lock; call_ck Suspend boolean:true || call_logind Suspend boolean:true ;;
            Hibernate) lock; call_ck Hibernate boolean:true || call_logind Hibernate boolean:true ;;
            Reboot) call_ck Restart || call_logind Reboot boolean:true ;;
            Shutdown) call_ck Stop || call_logind Poweroff boolean:true ;;
        esac
    fi
}

lock() {
    opt_blank=true
    [ "$1" -eq noblank ] && opt_blank=false

    # If swayidle is running, send the signal to lock (and blank the screen) now
    if killall -q -USR1 swayidle > /dev/null 2> /dev/null; then
        sleep 1
        return
    fi

    # If xss-lock is running, it'll run the right locker
    if pgrep -u "$(id -u)" -x xss-lock > /dev/null 2> /dev/null; then
        # Lock and blank the screen...
        xset s activate; $opt_blank && { sleep 1; xset dpms force off; }
        return
    fi

    # If xautolock is running, try that...
    if pgrep -u "$(id -u)" -x xautolock > /dev/null 2> /dev/null; then
        xautolock -locknow; $opt_blank && { sleep 1; xset s activate; }
        return
    fi

    # If xflock4 is available, assume it's a script that locks the screen
    # xfce4-power-manager will use this too
    if command -v xflock4 > /dev/null 2> /dev/null; then
        xflock4; $opt_blank && ! $wayland && { sleep 1; xset s activate; }
        return
    fi

    # Fall back to logind, hoping there's something responding to this
    if call_logind LockSession string:self; then
        $opt_blank && ! $wayland && { sleep 1; xset dpms force off; }
        return
    fi

    # Or just blank the screen
    xset s activate; xset dpms force off
}

close_programs() {
    # Closes all windows in the session.
    # If programs refuse to close after 1.5 seconds, notify the user, to
    #  avoid losing libreoffice documents or whatnot.
    # NOTE: Doesn't handle notification apps or daemons, only open windows.

    $force && return 0
    $wayland && return 0

    # Firefox is speshul
    killall -USR1 firefox

    # Requires wmctrl to function
    if ! command -v wmctrl > /dev/null 2> /dev/null; then
        return 0
    fi
    wmctrl -l | cut -d ' ' -f 1 | xargs -L1 wmctrl -ic
    local attempts=3
    while [ "$attempts" -gt 0 -a "$(wmctrl -l | wc -l)" -gt 0 ]; do
        sleep 0.5
        local attempts="$(expr "$attempts" - 1)"
    done
    if [ "$(wmctrl -l | wc -l)" -gt 0 ]; then
        i3-nagbar -t error -m 'Some programs refuse to close. Close them manually and try again.' -B "Force $action" "'$program' -f '$action'"
        return 1
    fi
    return 0
}

program="$0"

force=false
while [ "$1" ]; do
    case "$1" in
    -f) force=true; shift; continue ;;
    *) break ;;
    esac
done

wayland=false
test -n "$WAYLAND_DISPLAY" && wayland=true

if [ "$1" ]; then
    action="$1"
else
    action="$(rofi -dmenu -i -p 'Power' -no-custom << EOF
Lock
Logout
Switch User
Suspend
Hibernate
Reboot
Reboot to Windows
Shutdown
EOF
    )"
    sleep 0.2
fi

case "$action" in
    Logout) close_programs && i3-msg exit ;;
    Lock) lock ;;  # TODO: Can we tell the power manager to lock?
    Lock_noblank) lock noblank ;;
    Suspend|Hibernate) call "$action" ;;
    Reboot|Shutdown) close_programs && call "$action" ;;
    'Reboot to Windows') close_programs && sudo grub-reboot-windows && call Reboot ;;
    'Switch User') lock; call_dm SwitchToGreeter ;;
esac
