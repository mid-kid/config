# The following lines were added by compinstall

zstyle ':completion:*' auto-description 'Specify: %d'
zstyle ':completion:*' completer _expand _complete _ignored _approximate
zstyle ':completion:*' file-sort name
zstyle ':completion:*' format 'Completing: %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' ignore-parents parent
zstyle ':completion:*' insert-unambiguous true
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'r:|[._-]=** r:|=**'
zstyle ':completion:*' max-errors 3
zstyle ':completion:*' menu select=long-list select=1
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' squeeze-slashes true

autoload -Uz compinit
compinit
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=1000
setopt autocd extendedglob notify beep prompt_subst
bindkey -e
# End of lines configured by zsh-newuser-install

bindkey ';5D' emacs-backward-word
bindkey ';5C' emacs-forward-word

autoload -U colors
colors

zgen="$HOME/.zgen"
[ "$zgen" -a ! -d "$zgen" -a "$(command -v git)" ] && mkdir -p "$zgen" && git clone https://github.com/tarjoilija/zgen "$zgen"

if [ -d "$zgen" ]; then
    source "$zgen/zgen.zsh"

    if ! zgen saved; then
        zgen loadall << EOBUNDLES
            zsh-users/zsh-syntax-highlighting
            marzocchi/zsh-notify
EOBUNDLES

        zgen save
    fi
fi

prompt_git() {
    if [ -d ".git" ]; then
        local branch="$(git symbolic-ref HEAD 2> /dev/null | cut -d '/' -f 3)"
        [ ! "$branch" ] && branch="$(git rev-parse --short HEAD)"
        printf "$branch"

        local staged_file_status=$(git diff --staged --name-status)

        local staged_files="$(printf "$staged_file_status" | grep -v "^U" | wc -l)"
        [ "$staged_files" -gt 0 ] && printf " ●$staged_files"

        local conflicting_files="$(printf "$staged_file_status" | grep "^U" | wc -l)"
        [ "$conflicting_files" -gt 0 ] && printf " ✖$conflicting_files"

        local changed_files="$(( $(git diff --name-only | uniq | wc -l) - $conflicting_files ))"
        [ "$changed_files" -gt 0 ] && printf " ✚$changed_files"

        local untracked_files="$(git status --porcelain | grep "^??" | wc -l)"
        [ "$untracked_files" -gt 0 ] && printf " …$untracked_files"
    fi
}

PROMPT="%{$fg[green]%}%n%{$reset_color%}@%{$fg[yellow]%}%m%{$reset_color%} :%{$fg[magenta]%}\$(prompt_git)%{$reset_color%}: %{$fg[cyan]%}%c%{$reset_color%} $ "

source ~/.shellrc
